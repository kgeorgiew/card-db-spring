<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.kgeorgiew</groupId>
    <artifactId>carddb</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>card-db-spring</name>
    <description>Card database rest api</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <org.jooq.version>3.9.1</org.jooq.version>
        <mysql.version>6.0.5</mysql.version>
        <h2.version>1.4.193</h2.version>
        <hikaricp.version>2.5.1</hikaricp.version>
        <springhateoas.version>0.23.0.RELEASE</springhateoas.version>
        <springrestdocs.version>1.1.2.RELEASE</springrestdocs.version>
        <asciidoctor.version>1.5.3</asciidoctor.version>
        <problemweb.version>0.17.0</problemweb.version>
        <restassured.version>3.0.2</restassured.version>

        <snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.hateoas</groupId>
            <artifactId>spring-hateoas</artifactId>
            <version>${springhateoas.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${org.jooq.version}</version>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikaricp.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.hamcrest</groupId>-->
                    <!--<artifactId>hamcrest-core</artifactId>-->
                <!--</exclusion>-->
                <!--<exclusion>-->
                    <!--<groupId>org.hamcrest</groupId>-->
                    <!--<artifactId>hamcrest-library</artifactId>-->
                <!--</exclusion>-->
                <!--<exclusion>-->
                    <!--<groupId>org.skyscreamer</groupId>-->
                    <!--<artifactId>jsonassert</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.restdocs</groupId>
            <artifactId>spring-restdocs-mockmvc</artifactId>
            <version>${springrestdocs.version}</version>
            <scope>test</scope>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>io.rest-assured</groupId>-->
            <!--<artifactId>rest-assured</artifactId>-->
            <!--<version>${restassured.version}</version>-->
            <!--<scope>test</scope>-->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.hamcrest</groupId>-->
                    <!--<artifactId>hamcrest-core</artifactId>-->
                <!--</exclusion>-->
                <!--<exclusion>-->
                    <!--<groupId>org.hamcrest</groupId>-->
                    <!--<artifactId>hamcrest-library</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>io.rest-assured</groupId>-->
            <!--<artifactId>spring-mock-mvc</artifactId>-->
            <!--<version>${restassured.version}</version>-->
            <!--<scope>test</scope>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.springframework.plugin</groupId>
            <artifactId>spring-plugin-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
        </dependency>

        <dependency>
            <groupId>org.zalando</groupId>
            <artifactId>problem-spring-web</artifactId>
            <version>${problemweb.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <compilerArg>-Xlint:unchecked,deprecation</compilerArg>
                        <compilerArg>-Werror</compilerArg>
                        <compilerArg>-parameters</compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-surefire-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<includes>-->
                        <!--<include>**/*Documentation.java</include>-->
                    <!--</includes>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.version}</version>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <sourceDirectory>src/docs/asciidoc</sourceDirectory>
                            <outputDirectory>target/docs/asciidoc</outputDirectory>
                            <sourceDocumentName>index.adoc</sourceDocumentName>
                            <backend>html</backend>
                            <doctype>book</doctype>
                            <attributes>
                                <snippets>${snippetsDirectory}</snippets>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>properties-maven-plugin</artifactId>
                            <version>1.0.0</version>
                            <executions>
                                <execution>
                                    <phase>initialize</phase>
                                    <goals>
                                        <goal>read-project-properties</goal>
                                    </goals>
                                    <configuration>
                                        <files>
                                            <file>src/test/resources/application.yml</file>
                                        </files>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
-->

                        <!-- TODO How to run only for tests? -->
            <!--<plugin>-->
                <!--<groupId>org.codehaus.mojo</groupId>-->
                <!--<artifactId>sql-maven-plugin</artifactId>-->
                <!--<version>1.5</version>-->

                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>com.h2database</groupId>-->
                        <!--<artifactId>h2</artifactId>-->
                        <!--<version>${h2.version}</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->

                <!--<configuration>-->
                    <!--&lt;!&ndash;all executions are ignored if -Dmaven.test.skip=true&ndash;&gt;-->
                    <!--<skip>${maven.test.skip}</skip>-->
                    <!--<forkMode>always</forkMode>-->
                <!--</configuration>-->

                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>create-database</id>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<goals>-->
                            <!--<goal>execute</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<driver>${spring.datasource.driverClassName}</driver>-->
                            <!--<url>${spring.datasource.url}</url>-->
                            <!--<username>${spring.datasource.username}</username>-->
                            <!--<password>${spring.datasource.password}</password>-->
                            <!--&lt;!&ndash; You can comment out username/password configurations and-->
                                 <!--have maven to look them up in your settings.xml using ${settingsKey}-->
                            <!--&ndash;&gt;-->
                            <!--<settingsKey>sensibleKey</settingsKey>-->

                            <!--<autocommit>true</autocommit>-->
                            <!--<srcFiles>-->
                                <!--<srcFile>src/main/resources/schema.sql</srcFile>-->
                            <!--</srcFiles>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <!-- TODO Run only on install command? -->
            <!--<plugin>-->
                <!--<groupId>org.jooq</groupId>-->
                <!--<artifactId>jooq-codegen-maven</artifactId>-->
                <!--<version>${org.jooq.version}</version>-->

                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>generate-database-sources</id>-->
                        <!--<phase>generate-sources</phase>-->
                        <!--<goals>-->
                            <!--<goal>generate</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->

                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>com.h2database</groupId>-->
                        <!--<artifactId>h2</artifactId>-->
                        <!--<version>${h2.version}</version>-->
                    <!--</dependency>-->

                    <!--<dependency>-->
                        <!--<groupId>mysql</groupId>-->
                        <!--<artifactId>mysql-connector-java</artifactId>-->
                        <!--<version>${mysql.version}</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->

                <!--<configuration>-->
                    <!--<jdbc>-->
                        <!--<driver>${spring.datasource.driverClassName}</driver>-->
                        <!--<url>${spring.datasource.url}</url>-->
                        <!--<user>${spring.datasource.username}</user>-->
                        <!--<password>${spring.datasource.password}</password>-->
                    <!--</jdbc>-->
                    <!--<generator>-->
                        <!--<strategy>-->
                            <!--<matchers>-->
                                <!--<tables>-->
                                    <!--<table>-->
                                        <!--<tableClass>-->
                                            <!--<transform>PASCAL</transform>-->
                                            <!--<expression>T_$0</expression>-->
                                        <!--</tableClass>-->
                                    <!--</table>-->
                                <!--</tables>-->
                            <!--</matchers>-->
                        <!--</strategy>-->
                        <!--<database>-->
                            <!--<name>${spring.jooq.database.type}</name>-->
                            <!--<includes>.*</includes>-->
                            <!--<inputSchema>${spring.jooq.database.schema}</inputSchema>-->
                        <!--</database>-->
                        <!--<generate>-->
                            <!--&lt;!&ndash; Generate deprecated code for backwards compatibility-->
                                  <!--Defaults to true &ndash;&gt;-->
                            <!--<deprecated>false</deprecated>-->

                            <!--&lt;!&ndash; Generate immutable POJOs for usage of the ResultQuery.fetchInto(Class) API-->
                                 <!--This overrides any value set in <pojos/>-->
                                 <!--Defaults to false &ndash;&gt;-->
                            <!--<immutablePojos>false</immutablePojos>-->

                            <!--&lt;!&ndash; Generate interfaces that will be implemented by records and/or pojos.-->
                                 <!--You can also use these interfaces in Record.into(Class<?>) and similar-->
                                 <!--methods, to let jOOQ return proxy objects for them.-->
                                 <!--Defaults to false &ndash;&gt;-->
                            <!--<interfaces>false</interfaces>-->

                            <!--&lt;!&ndash; Generate DAOs in addition to POJO classes-->
                                 <!--Defaults to false &ndash;&gt;-->

                            <!--&lt;!&ndash; Primary key / foreign key relations should be generated and used.-->
                                 <!--This is a prerequisite for various advanced features.-->
                                 <!--Defaults to true &ndash;&gt;-->
                            <!--<relations>true</relations>-->

                            <!--&lt;!&ndash; Generate jOOQ Record classes for type-safe querying. You can-->
                                 <!--turn this off, if you don't need "active records" for CRUD-->
                                 <!--Defaults to true &ndash;&gt;-->
                            <!--<records>false</records>-->

                            <!--&lt;!&ndash; Generate POJOs in addition to Record classes for usage of the-->
                                 <!--ResultQuery.fetchInto(Class) API-->
                                 <!--Defaults to false &ndash;&gt;-->
                            <!--<pojos>false</pojos>-->

                            <!--&lt;!&ndash; Annotate POJOs and Records with JPA annotations for increased-->
                                 <!--compatibility and better integration with JPA/Hibernate, etc-->
                                 <!--Defaults to false &ndash;&gt;-->
                            <!--<jpaAnnotations>false</jpaAnnotations>-->

                            <!--&lt;!&ndash; Annotate POJOs and Records with JSR-303 validation annotations-->
                                 <!--Defaults to false &ndash;&gt;-->
                            <!--<validationAnnotations>false</validationAnnotations>-->

                            <!--&lt;!&ndash; Annotate DAOs with useful spring annotations such as @Repository or @Autowired-->
                                 <!--Defaults to false &ndash;&gt;-->
                            <!--<springAnnotations>true</springAnnotations>-->

                            <!--&lt;!&ndash; Allow to turn off the generation of global object references, which include-->

                                 <!-- - Tables.java-->
                                 <!-- - Sequences.java-->
                                 <!-- - UDTs.java-->

                                 <!--Turning off the generation of the above files may be necessary for very-->
                                 <!--large schemas, which exceed the amount of allowed constants in a class's-->
                                 <!--constant pool (64k) or, whose static initialiser would exceed 64k of-->
                                 <!--byte code-->

                                 <!--Defaults to true &ndash;&gt;-->
                            <!--<globalObjectReferences>true</globalObjectReferences>-->

                            <!--&lt;!&ndash; Generate fluent setters in-->

                                 <!-- - records-->
                                 <!-- - pojos-->
                                 <!-- - interfaces-->

                                 <!--Fluent setters are against the JavaBeans specification, but can be quite-->
                                 <!--useful to those users who do not depend on EL, JSP, JSF, etc.-->

                                 <!--Defaults to false &ndash;&gt;-->
                            <!--<fluentSetters>true</fluentSetters>-->
                            <!--<javaTimeTypes/>-->
                        <!--</generate>-->
                        <!--<target>-->
                            <!--<packageName>de.kgeorgiew.domain.jooq</packageName>-->
                            <!--<directory>target/generated-sources/jooq</directory>-->
                        <!--</target>-->
                    <!--</generator>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>
